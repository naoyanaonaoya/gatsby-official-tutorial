{"version":3,"file":"component---src-pages-blog-index-js-77591816d0ce436117c5.js","mappings":"6LAGWA,EAAc,sCACdC,EAAc,sCCyDzB,EAhDe,SAACC,GAEd,IAAQC,EAAwBD,EAAxBC,UAAWC,EAAaF,EAAbE,SACnB,GAA0CC,EAAAA,EAAAA,KAAlCC,EAAR,EAAQA,MAAR,EAAeC,QAAf,EAAwBC,KAAxB,EAA8BC,QAK9B,OACE,gCACE,uBAAKC,UDtBY,mCCuBf,6BACGP,EADH,MACiBG,GAEjB,0BAAQI,UDrBO,oCCqBgBJ,GAC/B,2BACE,sBAAII,UDxBQ,mCCyBV,sBAAIA,UAAWV,GACb,gBAAC,KAAD,CAAMW,GAAG,IAAID,UAAWT,GAAxB,SAIF,sBAAIS,UAAWV,GACb,gBAAC,KAAD,CAAMW,GAAG,SAASD,UAAWT,GAA7B,UAIF,sBAAIS,UAAWV,GACb,gBAAC,KAAD,CAAMW,GAAG,QAAQD,UAAWT,GAA5B,SAIF,sBAAIS,UAAWV,GACb,gBAAC,KAAD,CAAMW,GAAG,WAAWD,UAAWT,GAA/B,cAMN,4BACE,sBAAIS,UDnDO,iCCmDcP,GACxBC,O,mCCjCX,IAlBwB,WAetB,OAdiBQ,EAAAA,EAAAA,IAAe,aAAxBC,KAcIC,e,8DCgCd,UA7CiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElB,OACE,gCACE,gBAAC,IAAD,CAAQZ,UAAU,iBAChB,0BACGY,EAAKC,OAAOC,MAAMC,KAAI,SAACC,GAAD,OACrB,2BAASC,IAAKD,EAAKE,IACjB,0BACE,gBAAC,KAAD,CAAMV,GAAE,SAAWQ,EAAKG,MAASH,EAAKI,YAAYjB,QAEpD,oCAAYa,EAAKI,YAAYC","sources":["webpack://official-tutorial/./src/components/layout.module.css","webpack://official-tutorial/./src/components/layout.js","webpack://official-tutorial/./src/hooks/use-site-metadata.js","webpack://official-tutorial/./src/pages/blog/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--eLBMS\";\nexport var heading = \"layout-module--heading--8VjLO\";\nexport var navLinkItem = \"layout-module--nav-link-item--pfCo2\";\nexport var navLinkText = \"layout-module--nav-link-text--ac2nV\";\nexport var navLinks = \"layout-module--nav-links--EROwB\";\nexport var siteTitle = \"layout-module--site-title--5N6mf\";","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport useSiteMetadata from \"../hooks/use-site-metadata\";\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n  siteTitle,\n} from \"./layout.module.css\";\n// console.log(container);\n\nconst Layout = (props) => {\n  // https://dezanari.com/react-component-props-object/\n  const { pageTitle, children } = props;\n  const { title, siteUrl, name, content } = useSiteMetadata();\n  // const pageTitle = props.pageTitle;\n  // const children = props.children;\n  // console.log(children);\n\n  return (\n    <>\n      <div className={container}>\n        <title>\n          {pageTitle} | {title}\n        </title>\n        <header className={siteTitle}>{title}</header>\n        <nav>\n          <ul className={navLinks}>\n            <li className={navLinkItem}>\n              <Link to=\"/\" className={navLinkText}>\n                Home\n              </Link>\n            </li>\n            <li className={navLinkItem}>\n              <Link to=\"/about\" className={navLinkText}>\n                About\n              </Link>\n            </li>\n            <li className={navLinkItem}>\n              <Link to=\"/blog\" className={navLinkText}>\n                Blog\n              </Link>\n            </li>\n            <li className={navLinkItem}>\n              <Link to=\"/contact\" className={navLinkText}>\n                Contact\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        <main>\n          <h1 className={heading}>{pageTitle}</h1>\n          {children}\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            title\n            siteUrl\n            name\n            content\n          }\n        }\n      }\n    `\n  );\n  return site.siteMetadata;\n};\n\nexport default useSiteMetadata;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport {} from \"./index.module.css\";\n\nconst BlogPage = ({ data }) => {\n  // console.log(data);\n  return (\n    <>\n      <Layout pageTitle=\"My Blog Posts\">\n        <ul>\n          {data.allMdx.nodes.map((node) => (\n            <article key={node.id}>\n              <h2>\n                <Link to={`/blog/${node.slug}`}>{node.frontmatter.title}</Link>\n              </h2>\n              <p>Posted: {node.frontmatter.date}</p>\n            </article>\n          ))}\n        </ul>\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n\n/*\nquery MyQuery {\n  allFile {\n    nodes {\n      name\n    }\n  }\n}\n*/\n\nexport default BlogPage;\n"],"names":["navLinkItem","navLinkText","props","pageTitle","children","useSiteMetadata","title","siteUrl","name","content","className","to","useStaticQuery","site","siteMetadata","data","allMdx","nodes","map","node","key","id","slug","frontmatter","date"],"sourceRoot":""}